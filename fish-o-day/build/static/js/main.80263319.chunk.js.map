{"version":3,"sources":["components/StorePicker.js","components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["StorePicker","state","myInput","handleOnChange","event","setState","target","value","goToStore","preventDefault","storeName","props","history","push","className","onSubmit","this","type","required","placeholder","onChange","e","React","Component","Header","tagline","formatPrice","cents","toLocaleString","style","currency","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","desc","image","createFish","parseFloat","addFish","EditFishForm","handleChange","updatedFish","updateFish","index","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","SampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","ref","syncState","setItem","stringify","removeBinding","notFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.80263319.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  state = {\n    myInput: \"\",\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      myInput: event.target.value,\n    });\n  };\n\n  goToStore = (event) => {\n    event.preventDefault();\n    const storeName = this.state.myInput;\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Store Name\"\n          value={this.state.myInput}\n          onChange={(e) => this.handleOnChange(e)}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => {\n  return (\n    <header className=\"top\">\n      <h1>\n        Catch\n        <span className=\"ofThe\">\n          <span className=\"of\">Of</span>\n          <span className=\"the\">The</span>\n        </span>\n        Day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count} </span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}> x</button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nclass AddFishForm extends React.Component {\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  state = {\n    name: \"\",\n    price: \"\",\n    status: \"available\",\n    desc: \"\",\n    image: \"\",\n  };\n\n  createFish = (event) => {\n    event.preventDefault();\n    const fish = {\n      name: this.state.name,\n      price: parseFloat(this.state.price),\n      status: this.state.status,\n      desc: this.state.desc,\n      image: this.state.image,\n    };\n    this.props.addFish(fish);\n    this.setState({\n      name: \"\",\n      price: \"\",\n      status: \"available\",\n      desc: \"\",\n      image: \"\",\n    });\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input\n          name=\"name\"\n          type=\"text\"\n          onChange={this.handleOnChange}\n          value={this.state.name}\n          placeholder=\"Name\"\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          onChange={this.handleOnChange}\n          value={this.state.price}\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" onChange={this.handleOnChange}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleOnChange}\n          value={this.state.desc}\n          placeholder=\"Desc\"\n        />\n        <input\n          name=\"image\"\n          type=\"text\"\n          onChange={this.handleOnChange}\n          value={this.state.image}\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  };\n  handleChange = (event) => {\n    const updatedFish = {\n      ...this.props.fish,\n      [event.target.name]: event.target.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDpHM8J0T_IwR97FjEZw0-PfSvTcbppDXg\",\n  authDomain: \"fish-of-the-day-40eb0.firebaseapp.com\",\n  databaseURL: \"https://fish-of-the-day-40eb0-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from \"react\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport PropTypes from \"prop-types\";\nimport Login from \"./Login\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n    console.log(authData);\n  };\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n    index: PropTypes.string,\n  };\n  render() {\n    const { image, name, price, status, desc } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport SampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef),\n      });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    const fishes = { ...this.state.fishes };\n    fishes[`fish${Date.now()}`] = fish;\n    this.setState({\n      fishes,\n    });\n  };\n  updateFish = (key, updatedFish) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = updatedFish;\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = null;\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: SampleFishes,\n    });\n  };\n\n  addToOrder = (key) => {\n    const order = { ...this.state.order };\n    order[key] = order[key] + 1 || 1;\n    this.setState({\n      order,\n    });\n  };\n\n  removeFromOrder = (key) => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({\n      order,\n    });\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\n\nconst notFound = () => (\n  <div>\n    <h2>Not Found!!!</h2>\n  </div>\n);\n\nexport default notFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport notFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={notFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./css/style.css\";\nimport Router from \"./components/Router\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}